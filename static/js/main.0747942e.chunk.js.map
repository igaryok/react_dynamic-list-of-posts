{"version":3,"sources":["components/Comment/Comment.js","components/CommentList/CommentsList.js","components/User/User.js","components/Post/Post.js","components/PostList/PostList.js","App.js","index.js"],"names":["Comment","_ref","comment","user","name","body","email","userName","react_default","a","createElement","className","concat","defaultProps","CommentsList","comments","map","item","components_Comment_Comment","key","id","User","_user$address","address","street","suite","city","Post","post","title","components_User_User","CommentList_CommentsList","PostList","posts","components_Post_Post","URL","App","state","isLoading","hasError","handleClickLoad","_this","setState","Promise","all","fetch","then","resolve","json","data","_data","Object","slicedToArray","users","toConsumableArray","_objectSpread","find","person","userId","filter","postId","catch","_this$state","this","titleButton","classForButton","length","Fragment","type","onClick","disabled","components_PostList_PostList","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0747942e.chunk.js","sourcesContent":["import React from 'react';\nimport './Comment.css';\nimport PropTypes from 'prop-types';\n\nfunction Comment({ comment, user }) {\n  const { name, body, email } = comment;\n  const userName = user.name;\n\n  return (\n    <ul className=\"list-group-item list-group-item-info comment\">\n      <p className=\"list-group-item list-group-item-info comment__head\">\n        {name}\n      </p>\n      <p className=\"list-group-item list-group-item-info comment__body\">\n        {body}\n      </p>\n      <p className=\"list-group-item list-group-item-info comment__user-info\">\n        {`user: ${userName} (${email})`}\n      </p>\n    </ul>\n  );\n}\n\nComment.defaultProps = {\n  user: {\n    name: 'Guest',\n  },\n};\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    body: PropTypes.string,\n    email: PropTypes.string,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  }).isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from '../Comment/Comment';\n\nconst CommentsList = ({ comments }) => (\n  comments.map(\n    item => <Comment comment={item} user={item.user} key={item.id} />\n  )\n);\n\nCommentsList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    body: PropTypes.string,\n    email: PropTypes.string,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n    }),\n  })).isRequired,\n};\n\nexport default CommentsList;\n","import React from 'react';\nimport './User.css';\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  const { name, email } = user;\n  const { street, suite, city } = user.address;\n\n  return (\n    <p className=\"list-group-item list-group-item-primary user-info\">\n      {\n        `User: ${name}, email: ${email} |\n        Adress: ${street}, ${suite}, ${city}`\n      }\n    </p>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.shape({\n      street: PropTypes.string,\n      suite: PropTypes.string,\n      city: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport './Post.css';\nimport PropTypes from 'prop-types';\nimport CommentList from '../CommentList/CommentsList';\nimport User from '../User/User';\n\nfunction Post({ post }) {\n  const { title, body, comments } = post;\n\n  return (\n    <ul className=\"list-group post\">\n      <p className=\"list-group-item list-group-item-primary post__head\">\n        {title}\n      </p>\n      <p className=\"list-group-item list-group-item-primary post__body\">\n        {body}\n      </p>\n      <User user={post.user} />\n      <CommentList comments={comments} />\n    </ul>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      address: PropTypes.shape({\n        street: PropTypes.string,\n        suite: PropTypes.string,\n        city: PropTypes.string,\n      }),\n    }),\n    comments: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      body: PropTypes.string,\n      email: PropTypes.string,\n      user: PropTypes.shape({\n        name: PropTypes.string,\n      }),\n    })),\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from '../Post/Post';\n\nconst PostList = ({ posts }) => (\n  posts.map(item => (\n    <Post post={item} key={item.id} />\n  ))\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      address: PropTypes.shape({\n        street: PropTypes.string,\n        suite: PropTypes.string,\n        city: PropTypes.string,\n      }),\n    }),\n    comments: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      body: PropTypes.string,\n      email: PropTypes.string,\n      user: PropTypes.shape({\n        name: PropTypes.string,\n      }),\n    })),\n  })).isRequired,\n};\n\nexport default PostList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport PostList from './components/PostList/PostList';\n\nconst URL = 'https://jsonplaceholder.typicode.com/';\n\nclass App extends Component {\n  state = {\n    posts: [],\n    isLoading: false,\n    hasError: false,\n  }\n\n  handleClickLoad = () => {\n    this.setState({\n      isLoading: true,\n      hasError: false,\n    });\n    Promise.all([\n      fetch(`${URL}posts`).then(resolve => resolve.json()),\n      fetch(`${URL}users`).then(resolve => resolve.json()),\n      fetch(`${URL}comments`).then(resolve => resolve.json()),\n    ]).then((data) => {\n      const [posts, users, comments] = data;\n\n      this.setState({\n        posts: [...posts].map(post => (\n          {\n            ...post,\n            user: users.find(person => person.id === post.userId),\n            comments: comments.filter(comment => comment.postId === post.id)\n              .map(item => ({\n                ...item,\n                user: users.find(person => person.email === item.email),\n              })),\n            isLoading: false,\n          }\n        )),\n      });\n    }).catch(() => this.setState({ hasError: true, isLoading: false }));\n  }\n\n  render() {\n    const { posts, isLoading, hasError } = this.state;\n    const titleButton = (hasError ? 'Try again' : 'Load posts');\n    const classForButton = (\n      isLoading\n        ? 'btn btn-secondary'\n        : 'btn btn-primary'\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Static list of posts</h1>\n\n        {posts.length\n          ? (\n            <>\n              <span>posts: </span>\n              {posts.length}\n            </>\n          )\n          : (\n            <>\n              <p>No posts yet..</p>\n              {hasError\n                ? <p className=\"alert alert-danger\">Error occurred!</p>\n                : null\n              }\n              <button\n                type=\"button\"\n                className={classForButton}\n                onClick={this.handleClickLoad}\n                disabled={isLoading}\n              >\n                {isLoading\n                  ? 'Loading...'\n                  : titleButton\n                }\n              </button>\n            </>\n          )\n        }\n        <PostList posts={posts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}